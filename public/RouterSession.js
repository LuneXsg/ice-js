// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.2
//
// <auto-generated>
//
// Generated from file `RouterSession.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var Glacier2 = require("ice").Glacier2;
    var Slice = Ice.Slice;

    var SGTech = __M.module("SGTech");

    SGTech.AtlanticCity = __M.module("SGTech.AtlanticCity");

    SGTech.AtlanticCity.MemberCenter = __M.module("SGTech.AtlanticCity.MemberCenter");

    SGTech.AtlanticCity.MemberCenter.DynamicObserverInfo = Slice.defineStruct(
        function(observer, operationName, operationMode, callbackParam)
        {
            this.observer = observer !== undefined ? observer : null;
            this.operationName = operationName !== undefined ? operationName : "";
            this.operationMode = operationMode !== undefined ? operationMode : 0;
            this.callbackParam = callbackParam !== undefined ? callbackParam : null;
        },
        false,
        function(__os)
        {
            __os.writeProxy(this.observer);
            __os.writeString(this.operationName);
            __os.writeInt(this.operationMode);
            Ice.ByteSeqHelper.write(__os, this.callbackParam);
        },
        function(__is)
        {
            this.observer = __is.readProxy();
            this.operationName = __is.readString();
            this.operationMode = __is.readInt();
            this.callbackParam = Ice.ByteSeqHelper.read(__is);
        },
        8, 
        false);

    SGTech.AtlanticCity.MemberCenter.RouterSession = Slice.defineObject(
        undefined,
        Ice.Object,
        [
            Glacier2.Session
        ], 2,
        [
            "::Glacier2::Session",
            "::Ice::Object",
            "::SGTech::AtlanticCity::MemberCenter::RouterSession"
        ],
        -1, undefined, undefined, false);

    SGTech.AtlanticCity.MemberCenter.RouterSessionPrx = Slice.defineProxy(Ice.ObjectPrx, SGTech.AtlanticCity.MemberCenter.RouterSession.ice_staticId, [
        Glacier2.SessionPrx]);

    Slice.defineOperations(SGTech.AtlanticCity.MemberCenter.RouterSession, SGTech.AtlanticCity.MemberCenter.RouterSessionPrx,
    {
        "GetMemberId": [, 2, 2, , , [3], , , , , ],
        "GetWebSessionId": [, 2, 2, , , [7], , , , , ],
        "GetPlatform": [, 2, 2, , , [7], , , , , ],
        "GetSessionInfomation": [, 2, 2, , , , , [[3], [4], [7]], , , ],
        "AddDynamicObserver": [, 2, 2, , , , [[SGTech.AtlanticCity.MemberCenter.DynamicObserverInfo]], , , , ],
        "RemoveDynamicObserver": [, 2, 2, , , , [[9]], , , , ]
    });
    exports.SGTech = SGTech;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
